{"ast":null,"code":"import _asyncToGenerator from \"/home/lucas/RiderProjects/angular_dotnet/angular_dotnet/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { getBaseUrl } from \"../../main\";\nimport { firstValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/material/radio\";\n\nfunction HomeComponent_mat_card_0_mat_select_6_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵlistener(\"onSelectionChange\", function HomeComponent_mat_card_0_mat_select_6_mat_option_1_Template_mat_option_onSelectionChange_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const country_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r5.loadVatRate(country_r4.vatRate));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", country_r4.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r4.name);\n  }\n}\n\nfunction HomeComponent_mat_card_0_mat_select_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-select\", 14);\n    i0.ɵɵtemplate(1, HomeComponent_mat_card_0_mat_select_6_mat_option_1_Template, 2, 2, \"mat-option\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.countryData);\n  }\n}\n\nfunction HomeComponent_mat_card_0_mat_radio_group_7_mat_radio_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vatRate_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", vatRate_r8, \" %\\u00A0\");\n  }\n}\n\nfunction HomeComponent_mat_card_0_mat_radio_group_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-group\", 17)(1, \"mat-label\", 18);\n    i0.ɵɵtext(2, \"VAT rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, HomeComponent_mat_card_0_mat_radio_group_7_mat_radio_button_3_Template, 2, 1, \"mat-radio-button\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.vatList);\n  }\n}\n\nfunction HomeComponent_mat_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"mat-card-content\", 2)(2, \"mat-form-field\", 3)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Country\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtemplate(6, HomeComponent_mat_card_0_mat_select_6_Template, 2, 1, \"mat-select\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, HomeComponent_mat_card_0_mat_radio_group_7_Template, 4, 1, \"mat-radio-group\", 5);\n    i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"mat-radio-button\", 8);\n    i0.ɵɵtext(11, \"Price Without VAT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9)(13, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 7)(15, \"mat-radio-button\", 10);\n    i0.ɵɵtext(16, \"Value-Added Tax\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 11)(18, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 7)(20, \"mat-radio-button\", 12);\n    i0.ɵɵtext(21, \"Price Included VAT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 13)(23, \"br\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formGroup);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.countryData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.vatList);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", true);\n  }\n}\n\nexport class HomeComponent {\n  constructor(builder, httpClient) {\n    this.builder = builder;\n    this.httpClient = httpClient;\n    this.countryData = [];\n    this.loading = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.countryData = yield firstValueFrom(_this.httpClient.get(getBaseUrl() + \"country\"));\n      console.log('country: ', _this.countryData);\n      _this.formGroup = _this.builder.group({\n        country: new FormControl(\"\", [Validators.required]),\n        vatRate: new FormControl(\"\", [Validators.required]),\n        radioWithoutTax: new FormControl(\"\", [Validators.required]),\n        radioValueAdded: new FormControl(\"\", [Validators.required]),\n        radioIncludedTax: new FormControl(\"\", [Validators.required]),\n        withoutTax: new FormControl(\"\", [Validators.required]),\n        addedTax: new FormControl(\"\", [Validators.required]),\n        priceIncludedVat: new FormControl(\"\", [Validators.required])\n      });\n      _this.loading = true;\n    })();\n  }\n\n  loadVatRate(list) {\n    this.vatList = list;\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"w-50\", 4, \"ngIf\"], [1, \"w-50\"], [1, \"flex-column\", \"container\", 3, \"formGroup\"], [1, \"row\"], [\"formControlName\", \"country\", 4, \"ngIf\"], [\"formControlName\", \"checkboxVatRates\", \"class\", \"row\", 4, \"ngIf\"], [1, \"row\", 2, \"display\", \"flex\"], [1, \"flex-row\"], [\"formControlName\", \"radioWithoutTax\", 1, \"col-4\"], [\"formControlName\", \"withoutTax\", \"type\", \"text\", 1, \"col-8\", 3, \"disabled\"], [\"formControlName\", \"radioValueAdded\", 1, \"col-4\"], [\"formControlName\", \"addedTax\", \"type\", \"text\", 1, \"col-8\", 3, \"disabled\"], [\"formControlName\", \"radioIncludedTax\", 1, \"col-4\"], [\"formControlName\", \"priceIncludedVat\", \"type\", \"text\", 1, \"col-8\", 3, \"disabled\"], [\"formControlName\", \"country\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"onSelectionChange\"], [\"formControlName\", \"checkboxVatRates\", 1, \"row\"], [1, \"vat-label\", \"col-2\"], [\"class\", \"col-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-3\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HomeComponent_mat_card_0_Template, 24, 6, \"mat-card\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.formGroup && ctx.loading);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i4.MatCard, i4.MatCardContent, i5.MatFormField, i5.MatLabel, i1.FormGroupDirective, i1.FormControlName, i6.MatSelect, i7.MatOption, i8.MatRadioGroup, i8.MatRadioButton],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","getBaseUrl","firstValueFrom","i0","HomeComponent","constructor","builder","httpClient","ngOnInit","countryData","get","console","log","formGroup","group","country","required","vatRate","radioWithoutTax","radioValueAdded","radioIncludedTax","withoutTax","addedTax","priceIncludedVat","loading","loadVatRate","list","vatList","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/lucas/RiderProjects/angular_dotnet/angular_dotnet/ClientApp/src/app/home/home.component.ts","/home/lucas/RiderProjects/angular_dotnet/angular_dotnet/ClientApp/src/app/home/home.component.html"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {getBaseUrl} from \"../../main\";\nimport {firstValueFrom} from \"rxjs\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent implements OnInit{\n  formGroup!: FormGroup;\n  countryData: CountryData[] = [];\n  loading : boolean = false;\n  vatList : any[] | undefined;\n  constructor(\n    private readonly builder : FormBuilder,\n    private readonly httpClient : HttpClient,\n  ) {\n\n  }\n  async ngOnInit() : Promise<void>{\n    this.countryData = await firstValueFrom(this.httpClient.get<CountryData[]>(getBaseUrl()+ \"country\"));\n\n    console.log('country: ', this.countryData)\n    this.formGroup = this.builder.group(\n      {\n        country : new FormControl(\"\", [Validators.required]),\n        vatRate : new FormControl(\"\", [Validators.required]),\n        radioWithoutTax : new FormControl(\"\", [Validators.required]),\n        radioValueAdded : new FormControl(\"\", [Validators.required]),\n        radioIncludedTax : new FormControl(\"\", [Validators.required]),\n        withoutTax : new FormControl(\"\", [Validators.required]),\n        addedTax : new FormControl(\"\", [Validators.required]),\n        priceIncludedVat : new FormControl(\"\", [Validators.required])\n      }\n    )\n\n    this.loading = true;\n  }\n\n  loadVatRate(list : any){\n    this.vatList = list;\n  }\n}\ninterface CountryData\n{\n  name? : string;\n  vatRate? : any[];\n}\n","<mat-card class=\"w-50\" *ngIf=\"formGroup && loading\">\n  <mat-card-content [formGroup]=\"formGroup\" class=\"flex-column container\">\n    <mat-form-field class=\"row\">\n      <mat-label>Country</mat-label>\n        <div>\n            <mat-select formControlName=\"country\" *ngIf=\"countryData\">\n                <mat-option (onSelectionChange)=\"loadVatRate(country.vatRate)\" *ngFor=\"let country of countryData\" value=\"{{country.name}}\">{{country.name}}</mat-option>\n            </mat-select>\n        </div>\n    </mat-form-field>\n    <mat-radio-group formControlName=\"checkboxVatRates\" class=\"row\" *ngIf=\"vatList\">\n      <mat-label class=\"vat-label col-2\">VAT rate</mat-label>\n      <mat-radio-button class=\"col-3\"  *ngFor=\"let vatRate of vatList\">{{vatRate}} %&nbsp;</mat-radio-button>\n    </mat-radio-group>\n    <div class=\"row\" style=\"display: flex\">\n          <div class=\"flex-row\">\n            <mat-radio-button formControlName=\"radioWithoutTax\" class=\"col-4\">Price Without VAT</mat-radio-button>\n            <input [disabled]=\"true\" formControlName=\"withoutTax\" class=\"col-8\" type=\"text\"/><br/>\n          </div>\n          <div class=\"flex-row\">\n            <mat-radio-button formControlName=\"radioValueAdded\" class=\"col-4\">Value-Added Tax</mat-radio-button>\n            <input [disabled]=\"true\" formControlName=\"addedTax\" class=\" col-8\" type=\"text\"/><br/>\n          </div>\n          <div class=\"flex-row\">\n            <mat-radio-button formControlName=\"radioIncludedTax\" class=\"col-4\">Price Included VAT</mat-radio-button>\n            <input [disabled]=\"true\" formControlName=\"priceIncludedVat\" class=\"col-8\" type=\"text\"/><br/>\n          </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n"]},"metadata":{},"sourceType":"module"}