{"ast":null,"code":"import _asyncToGenerator from \"/home/lucas/RiderProjects/angular_dotnet/angular_dotnet/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/checkbox\";\n\nfunction HomeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 4);\n    i0.ɵɵelement(2, \"mat-label\")(3, \"input\", 8);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class HomeComponent {\n  constructor(builder, httpClient, baseUrl) {\n    this.builder = builder;\n    this.httpClient = httpClient;\n    this.countryData = [];\n    this.httpClient.get(baseUrl + \"country\").subscribe(result => {\n      this.countryData = result;\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(_this.countryData);\n      _this.formGroup = _this.builder.group({\n        country: new FormControl(\"\", [Validators.required]),\n        vatRate: new FormControl(\"\", [Validators.required]),\n        checkboxVatRates: new FormControl(\"\", [Validators.required]),\n        withoutTax: new FormControl(\"\", [Validators.required]),\n        addedTax: new FormControl(\"\", [Validators.required]),\n        priceIncludedVat: new FormControl(\"\", [Validators.required])\n      });\n    })();\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[\"type\", \"text\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-6\"], [\"appearance\", \"outline\"], [\"label\", \"Price Without VAT\"], [\"label\", \"Value-Added Tax\"], [\"label\", \"Price Included VAT\"], [\"type\", \"checkbox\", \"formControlName\", \"vatRate\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\")(2, \"mat-form-field\")(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, HomeComponent_div_6_Template, 4, 0, \"div\", 1);\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 3)(9, \"mat-form-field\", 4);\n      i0.ɵɵelement(10, \"mat-checkbox\", 5)(11, \"mat-checkbox\", 6)(12, \"mat-checkbox\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3);\n      i0.ɵɵelement(14, \"input\", 0)(15, \"input\", 0)(16, \"input\", 0);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countryData);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i4.MatCard, i4.MatCardContent, i5.MatFormField, i5.MatLabel, i6.MatCheckbox, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AACA,SAAqBA,WAArB,EAA6CC,UAA7C,QAA8D,gBAA9D;;;;;;;;;;;ICKIC,4BAAyC,CAAzC,EAAyC,gBAAzC,EAAyC,CAAzC;IAEIA,6BAAuB,CAAvB,EAAuB,OAAvB,EAAuB,CAAvB;IAEFA;;;;ADAN,OAAM,MAAOC,aAAP,CAAoB;EAGxBC,YACmBC,OADnB,EAEmBC,UAFnB,EAGsBC,OAHtB,EAGqC;IAFlB;IACA;IAHnB,mBAA6B,EAA7B;IAMG,KAAKD,UAAL,CAAgBE,GAAhB,CAAmCD,OAAO,GAAE,SAA5C,EAAuDE,SAAvD,CAAkEC,MAAD,IAAW;MAC1E,KAAKC,WAAL,GAAmBD,MAAnB;IACD,CAFD;EAGF;;EACKE,QAAQ;IAAA;;IAAA;MAEZC,OAAO,CAACC,GAAR,CAAY,KAAI,CAACH,WAAjB;MACA,KAAI,CAACI,SAAL,GAAiB,KAAI,CAACV,OAAL,CAAaW,KAAb,CACf;QACEC,OAAO,EAAG,IAAIjB,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACiB,QAAZ,CAApB,CADZ;QAEEC,OAAO,EAAG,IAAInB,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACiB,QAAZ,CAApB,CAFZ;QAGEE,gBAAgB,EAAG,IAAIpB,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACiB,QAAZ,CAApB,CAHrB;QAIEG,UAAU,EAAG,IAAIrB,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACiB,QAAZ,CAApB,CAJf;QAKEI,QAAQ,EAAG,IAAItB,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACiB,QAAZ,CAApB,CALb;QAMEK,gBAAgB,EAAG,IAAIvB,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACiB,QAAZ,CAApB;MANrB,CADe,CAAjB;IAHY;EAab;;AAzBuB;;;mBAAbf,eAAaD,gGAMd,UANc;AAMJ;;;QANTC;EAAaqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1B1B,iCAAU,CAAV,EAAU,kBAAV,EAAU,CAAV,EAAU,gBAAV,EAAU,CAAV,EAAU,WAAV;MAGiBA;MAAOA;MAClBA;MACFA;MACAA;MAMAA,+BAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;MAGMA,oCAAuD,EAAvD,EAAuD,cAAvD,EAAuD,CAAvD,EAAuD,EAAvD,EAAuD,cAAvD,EAAuD,CAAvD;MAGFA;MAEFA;MACEA,6BAAoB,EAApB,EAAoB,OAApB,EAAoB,CAApB,EAAoB,EAApB,EAAoB,OAApB,EAAoB,CAApB;MAGFA;;;;MAlBuBA;MAAAA","names":["FormControl","Validators","i0","HomeComponent","constructor","builder","httpClient","baseUrl","get","subscribe","result","countryData","ngOnInit","console","log","formGroup","group","country","required","vatRate","checkboxVatRates","withoutTax","addedTax","priceIncludedVat","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/lucas/RiderProjects/angular_dotnet/angular_dotnet/ClientApp/src/app/home/home.component.ts","/home/lucas/RiderProjects/angular_dotnet/angular_dotnet/ClientApp/src/app/home/home.component.html"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {getBaseUrl} from \"../../main\";\nimport {firstValueFrom} from \"rxjs\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent implements OnInit{\n  formGroup : FormGroup | undefined\n  countryData: CountryData[] = [];\n  constructor(\n    private readonly builder : FormBuilder,\n    private readonly httpClient : HttpClient,\n    @Inject('BASE_URL') baseUrl: string\n  ) {\n     this.httpClient.get<CountryData[]>(baseUrl+ \"country\").subscribe((result) => {\n       this.countryData = result;\n     })\n  }\n  async ngOnInit() : Promise<void>{\n\n    console.log(this.countryData)\n    this.formGroup = this.builder.group(\n      {\n        country : new FormControl(\"\", [Validators.required]),\n        vatRate : new FormControl(\"\", [Validators.required]),\n        checkboxVatRates : new FormControl(\"\", [Validators.required]),\n        withoutTax : new FormControl(\"\", [Validators.required]),\n        addedTax : new FormControl(\"\", [Validators.required]),\n        priceIncludedVat : new FormControl(\"\", [Validators.required])\n      }\n    )\n  }\n}\ninterface CountryData\n{\n  name? : string;\n  vatRate? : number[];\n}\n","<mat-card>\n  <mat-card-content>\n    <mat-form-field>\n      <mat-label>Country</mat-label>\n      <input type=\"text\"/>\n    </mat-form-field>\n    <div *ngFor=\"let country of countryData\">\n      <mat-form-field appearance=\"outline\" >\n        <mat-label></mat-label>\n        <input type=\"checkbox\" formControlName=\"vatRate\" />\n      </mat-form-field>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <mat-form-field appearance=\"outline\">\n          <mat-checkbox label=\"Price Without VAT\"></mat-checkbox>\n          <mat-checkbox label=\"Value-Added Tax\"></mat-checkbox>\n          <mat-checkbox label=\"Price Included VAT\"></mat-checkbox>\n        </mat-form-field>\n      </div>\n      <div class=\"col-6\">\n        <input type=\"text\"/>\n        <input type=\"text\"/>\n        <input type=\"text\"/>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n"]},"metadata":{},"sourceType":"module"}